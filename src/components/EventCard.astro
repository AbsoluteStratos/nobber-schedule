---
interface Props {
  title: string;
  description: string;
  start: string;
  end: string;
  image?: string;
  index: number;
}

const { title, description, start, end, image, index } = Astro.props;
---

<div
  class="event-card"
  style={`
    ${image ? `background-image: linear-gradient(to left, rgba(0,0,0,0.6), rgba(255,255,255,1.0)), url('${image}')` : ""};
    animation-delay: ${index * 0.05}s;
  `}
  data-start-time={start}
  data-end-time={end}
>
  <div class="event-content">
    <h2>{title}</h2>
    <p class="time" data-time></p>
    <p class="date" data-date></p>
    <p>{description}</p>
  </div>
</div>

<script type="module">
    
</script>

<style>
  .event-card {
    display: flex;
    align-items: center;
    padding: 16px;
    border-radius: 12px;
    border: 2px solid rgb(250, 128, 114);
    box-shadow: 0 0 8px rgba(255, 160, 122, 0.6);
    background-color: #fff5f5; /* fallback if no image */
    background-size: cover;
    background-position: center center;
    color: rgb(60, 60, 60); /* ensure text is readable on dark overlay */
    position: relative;
    /* animation */
    opacity: 0;
    transform: translateX(-30px);
    animation: slideIn 0.6s ease-out forwards;
  }

  @keyframes slideIn {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .event-content {
    flex: 1;
    z-index: 1;
  }

  .event-content h2 {
    margin: 0;
    font-size: 1.2rem;
    color: rgb(72, 72, 72);
  }

  .event-content .time {
    margin: 4px 0;
    font-weight: bold;
    color: #7d3e4c;
  }
</style>